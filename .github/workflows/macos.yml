name: Build

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    name: Build
    runs-on: macos-12
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.19

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build-CLI
      run: |
        cd cli
        echo "Darwin build"
        make
        echo "Tar all builds"
        tar cfz ../ecm_cli_macOS.tar.gz ecm
        cd -

    - name: Build fyne
      run: |
        echo "build fyne"
        curl -ksLO https://github.com/fyne-io/fyne/archive/refs/tags/v2.2.2.tar.gz
        tar xfz v2.2.2.tar.gz
        cd fyne-2.2.2/cmd/fyne
        pwd
        ls
        go build
        ls
        cp fyne ../../../
        cd -
        pwd
        ls -al $PWD

    - name: Add credentials
      run: |
        pwd
        cd ui
        cat > credentials.env << EOF
        DROPBOX_CLIENT_ID=${{ secrets.DROPBOX_CLIENT_ID }}
        DROPBOX_CLIENT_SECRET=${{ secrets.DROPBOX_CLIENT_SECRET }}
        DROPBOX_PORT=${{ secrets.DROPBOX_PORT }}
        EOF
        sed -i -e "s,^[[:space:]]*,,g" credentials.env
        cat > rclone.conf << EOF
        [local]
        type = local
        [dropbox]
        type = dropbox
        env_auth = true
        EOF
        sed -i -e "s,^[[:space:]]*,,g" rclone.conf
        cd -

    - name: Build-UI
      run: |
        pwd
        export PATH=$PATH:$PWD
        cd ui

        echo "Darwin build"
        fyne bundle credentials.env > credentials.go
        fyne package
        tar cfz ../ecm_app_macOS.tar.gz ecm.app

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload cli binaries
      id: upload-ecm-cli
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ecm_cli_macOS.tar.gz
        asset_name: ecm_cli_macOS.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload app binaries
      id: upload-ecm-app
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ecm_app_macOS.tar.gz
        asset_name: ecm_app_macOS.tar.gz
        asset_content_type: application/octet-stream
